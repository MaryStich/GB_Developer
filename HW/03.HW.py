import math

# Требуется вычислить, сколько раз встречается некоторое число k в массиве list_1.

# Найдите количество и выведите его.

# Пример:

# list_1 = [1, 2, 3, 3, 5]
# k = 3
# count = 0

# for i in list_1:
#     if i == k:
#         count += 1
# print(count)

# ________________________________________________________________________________________
# Требуется найти в массиве list_1 самый близкий по величине элемент к заданному числу k и вывести его.
# Считать, что такой элемент может быть только один. Если значение k совпадает с этим элементом - выведите его.

# Пример:

# list_1 = [1, 2, 6, 4, 5]
# k = 12
# # 5
# dif = float("inf")

# for i in list_1:
#     d = abs(k - i)
#     if d <= dif:
#         dif = d
#         min = i
# print(min)

# ______________________________________________________________________________________________
# В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.

# В случае с английским алфавитом очки распределяются так:
# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.
# А русские буквы оцениваются так:
# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.
# Напишите программу, которая вычисляет стоимость введенного пользователем слова k и выводит его.
# Будем считать, что на вход подается только одно слово, которое содержит либо только английские, либо только русские буквы.

# Пример:

# k = "qz"
# 12
# A, E, I, O, U, L, N, S, T, R = [1]
# D, G = [2]
# B, C, M, P = [3]
# F, H, V, W, Y = [4]
# K = [5]
# J, X = [8]
# Q, Z = [10]

# А = В = Е = И = Н = О = Р = С = Т = [1]
# Д = К = Л = М = П = У = [2]
# Б = Г = Ё = Ь = Я = [3]
# Й = Ы = [4]
# Ж = З = Х = Ц = Ч = [5]
# Ш = Э = Ю = [8]
# Ф = Щ = Ъ = [10]

# dictionary = {
#     1: "АВЕИНОРСТAEIOULNSTR",
#     2: "ДКЛМПУDG",
#     3: "БГЁЬЯBCMP",
#     4: "ЙЫFHVWY",
#     5: "ЖЗХЦЧK",
#     8: "ШЭЮJX",
#     10: "ФЩЪQZ",
# }

# sum = 0
# word = k.upper()
# for letter in word:
#     for key, value in dictionary.items():
#         if letter in value:
#             sum+=key
# print(sum)

# _________________________________________________________________________________________
# Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# На вход подается 2 числа через пробел: n m
# n - кол-во элементов первого множества.
# m - кол-во элементов второго множества.
# Затем подаются элементы каждого множества через пробел в виде строки. ! Писать input() не надо

# Пример

# На входе:


# var1 = '5 4' # количество элементов первого и второго множества
# var2 = '10 30 5 7 9' # элементы первого множества через пробел
# var3 = '2 30 4 5' # элементы второго множества через пробел

# На выходе:
# 3 5

# var2=var2.replace(' ',',')
# var3=var3.replace(' ',',')
# print(var2)
# print(var3)

# var2 = var2.split(" ")
# var3 = var3.split(" ")
# print(var2)
# print(var3)

# var1 = "5 4"  # количество элементов первого и второго множества
# var2 = "1 30 30 5 47 9"  # элементы первого множества через пробел
# var3 = "2 30 47 5 9"  # элементы второго множества через пробел

# var2 = set(var2.split( ))
# var3 = set(var3.split( ))
# var2=var3.intersection(var2)

# var2=list(var2)
# var2= [int(i) for i in var2]
# # var2.sort()
# # print(*var2)

# print(*(sorted(var2)))

# var2=sorted(var3.intersection(var2))
# print(*var2)

# _________________________________________________________________________________________________
# Найти  макс сумму 3х соседних чисел

arr = [5, 8, 6, 9, 9, 9, 2, 7, 3]

# maxSum=float('-inf')
maxSum=arr[0]+arr[1]+arr[2]
for i in range(len(arr)-1):
    sum=arr[i]+arr[i-1]+arr[i+1]
    if sum>maxSum:
        maxSum=sum
print(maxSum)



